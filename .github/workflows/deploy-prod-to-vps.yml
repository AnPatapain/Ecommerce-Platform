name: Auto deploy prod to VPS pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js and install pnpm for building frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      # Build the frontend
      - name: Build frontend static files
        run: ./infrastructure/entrypoint.sh build-fe

      - name: Configure SSH to VPS server
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/ssh_vps_private.key
          chmod 600 ~/.ssh/ssh_vps_private.key
          ssh-keyscan -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts
          cat >>~/.ssh/config <<END
          Host VPS_SERVER
            HostName $SSH_HOST
            User $SSH_USER
            Port $SSH_PORT
            IdentityFile ~/.ssh/ssh_vps_private.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.VPS_SSH_HOST }}
          SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          SSH_USER: ${{ secrets.VPS_SSH_USER }}

      - name: Test ssh
        run: |
          ssh VPS_SERVER << EOF
            cd ~/Official-Fullstack-Skeleton
            ls
          EOF
          

      - name: Move frontend built file to the VPS server
        run: |
          echo "Port: $SSH_PORT"
          echo "User: $SSH_USER"
          echo "Host: $SSH_HOST"
          ls ~/.ssh
          scp -v -i ~/.ssh/ssh_vps_private.key -P $SSH_PORT -r ./packages/frontend/dist/. $SSH_USER@$SSH_HOST:/var/www/html/ofs
        env:
          SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
          SSH_HOST: ${{ secrets.VPS_SSH_HOST }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          SSH_USER: ${{ secrets.VPS_SSH_USER }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production # Specify environment that holds the secrets used in this pipeline

    steps:
      - name: Configure SSH to VPS server
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/ssh_vps_private.key
          chmod 600 ~/.ssh/ssh_vps_private.key
          cat >>~/.ssh/config <<END
          Host VPS_SERVER
            HostName $SSH_HOST
            User $SSH_USER
            Port $SSH_PORT
            IdentityFile ~/.ssh/ssh_vps_private.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.VPS_SSH_HOST }}
          SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          SSH_USER: ${{ secrets.VPS_SSH_USER }}

      - name: SSH into server and sync the source code
        run: |
          ssh VPS_SERVER << EOF
            cd ~/Official-Fullstack-Skeleton
            git reset --hard
            git clean -fd
            git pull origin main
            exit
          EOF

      #      - name: Build frontend static files for Nginx (pre-configured reverse proxy on my server)
      #        run: |
      #          ssh VPS_SERVER << EOF
      #            export PATH="/home/ubuntu/.nvm/versions/node/v22.12.0/bin:$PATH"
      #            cd ~/Official-Fullstack-Skeleton
      #            ./infrastructure/entrypoint.sh build-fe
      #            sudo cp -a packages/frontend/dist/. /var/www/html/ofs/
      #          EOF

      #      - name: Start backend process
      #        run: |
      #          ssh VPS_SERVER << EOF
      #            cd ~/Official-Fullstack-Skeleton
      #            ./infrastructure/entrypoint.sh prod
      #          EOF

      - name: Restart Nginx
        run: ssh VPS_SERVER 'sudo systemctl restart nginx.service'
