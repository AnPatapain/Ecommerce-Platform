{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserRole": {
				"type": "string",
				"enum": [
					"user",
					"admin"
				]
			},
			"User": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/UserRole"
					},
					"verified": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"email",
					"password",
					"name",
					"role",
					"verified"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.id-or-role-or-verified__": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password",
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.id-or-role-or-verified_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.id-or-role-or-verified__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserCreationRequest": {
				"$ref": "#/components/schemas/Omit_User.id-or-role-or-verified_"
			},
			"APIErrorCode": {
				"type": "string",
				"enum": [
					"ERR_UNKNOWN",
					"ERR_TOKEN_MISSING_IN_HEADER_OR_REQ_QUERY",
					"ERR_TOKEN_INVALID",
					"ERR_TOKEN_SUBJECT_INVALID",
					"ERR_PERMISSION_DENIED",
					"ERR_VALIDATION",
					"ERR_USER_ALREADY_EXISTS",
					"ERR_USER_NOT_VERIFIED",
					"ERR_USERNAME_PASSWORD_INVALID",
					"ERR_SECURITY_CONTEXT_NOT_SET"
				]
			},
			"APIErrorType": {
				"properties": {
					"message": {
						"type": "string"
					},
					"code": {
						"$ref": "#/components/schemas/APIErrorCode"
					}
				},
				"required": [
					"code"
				],
				"type": "object"
			},
			"Pick_User.email-or-password_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"LoginRequest": {
				"$ref": "#/components/schemas/Pick_User.email-or-password_"
			}
		},
		"securitySchemes": {
			"token": {
				"type": "apiKey",
				"name": "x-api-key",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "@app/backend",
		"version": "0.0.0",
		"contact": {}
	},
	"paths": {
		"/api/users/current": {
			"get": {
				"operationId": "GetCurrentUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"token": [
							"user:current.read"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [
					{
						"token": [
							"user.read"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/auth/signup": {
			"post": {
				"operationId": "Signup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"409": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/APIErrorType"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/verify": {
			"get": {
				"operationId": "VerifyAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"security": [
					{
						"token": [
							"user:current.verify"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/signin": {
			"post": {
				"operationId": "Signin",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/APIErrorType"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}