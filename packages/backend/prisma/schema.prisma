// Prisma schema file written in prisma DSL language. Its purpose is to define datasource, data driver (client)
// and schema for the shared-utils-models. Please create .env file in the same folder as this file and put connection url to it
// Author: Ke An NGUYEN

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  id        Int      @id @default(autoincrement())
  hash      String   @unique
  tokenType String
  userId    Int
  createdAt DateTime
  expiredAt DateTime
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  verified Boolean
  password String
  name     String
  role     String

  cart   Cart?
  orders Order[]
}

model OrderedShopItem {
  id              Int @id @default(autoincrement())
  priceAtPurchase Int

  //relation
  ShopItem   ShopItem @relation(fields: [shopItemId], references: [id])
  shopItemId Int
  Order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int
}

model Order {
  id    Int     @id @default(autoincrement())
  valid Boolean

  //relation
  User   User @relation(fields: [userId], references: [id])
  userId Int

  orderedShopItems OrderedShopItem[]
}

model Cart {
  id Int @id @default(autoincrement())

  //relation
  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @unique

  // shopItems ShopItem[]

  // explicte many to many relation
  shopItems ShopItemOnCart[]
}

model ShopItem {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String
  image       String
  quantity    Int
  price       Int

  //relation
  orderedShopItems OrderedShopItem[]
  // carts            Cart[]

  // explicte many to many relation
  carts ShopItemOnCart[]
}

model ShopItemOnCart {
  Cart       Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId     Int
  ShopItem   ShopItem @relation(fields: [shopItemId], references: [id], onDelete: Cascade)
  shopItemId Int

  @@id([cartId, shopItemId])
}
